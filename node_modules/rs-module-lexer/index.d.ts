/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum ImportType {
  /**
  A normal static using any syntax variations
  import .. from 'module'
  */
  Static = 1,
  /**
  A dynamic import expression `import(specifier)` or `import(specifier, opts)`
  */
  Dynamic = 2,
  /**
  An import.meta expression
  */
  ImportMeta = 3,
  /**
  A source phase import
  import source x from 'module'
  */
  StaticSourcePhase = 4,
  /**
  A dynamic source phase import
  import.source('module')
  */
  DynamicSourcePhase = 5
}
export interface IConfig {
  input: Array<ParseOptions>
}
export interface IResult {
  output: Array<ParseResult>
}
export interface ParseOptions {
  filename: string
  code: string
}
export interface ParseResult {
  filename: string
  imports: Array<ImportSpecifier>
  exports: Array<ExportSpecifier>
  facade: boolean
  hasModuleSyntax: boolean
}
export interface ImportSpecifier {
  /** Source name  */
  n?: string
  /** Source start index  */
  s: number
  /** Source end index  */
  e: number
  /** Import start index  */
  ss: number
  /** Import end index  */
  se: number
  /** Dynamic import start index  */
  d: number
  /** Assert object start index (include `{}`)  */
  a: number
  /** Type of import statement  */
  t: ImportType
}
export interface ExportSpecifier {
  /** Export name  */
  n: string
  /** Export origin name  */
  ln?: string
  /** Export name start index  */
  s: number
  /** Export name end index  */
  e: number
  /** Export origin name start index  */
  ls: number
  /** Export origin name end index  */
  le: number
}
export function parse(config: IConfig): IResult
export function parseAsync(config: IConfig): Promise<IResult>
export function getTargetTriple(): string
